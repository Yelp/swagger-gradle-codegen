/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: JUnit Tests
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.yelp.codegen.generatecodesamples.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import com.yelp.codegen.generatecodesamples.tools.Polymorphic
import com.yelp.codegen.generatecodesamples.tools.optimisticHashCode

/**
 * This is a generic `animal`. According to the value of `type` you might have more information
 * @property name
 * @property classification
 * @property type
 */
@JsonClass(generateAdapter = true)
@Polymorphic(
    discriminatorField = "type",
    discriminatedValues = ["bird", "dog", "snake", "Cat"],
    discriminatedClasses = [Bird::class, Dog::class, Snake::class, Cat::class]
)
open class Animal(
    @Json(name = "type") @field:Json(name = "type") open var type: String,
    @Json(name = "name") @field:Json(name = "name") open override var name: String,
    @Json(name = "classification") @field:Json(name = "classification") open var classification: Animal.ClassificationEnum? = null
) {
    override fun toString(): String {
        return "Animal(" +
            "name=$name," +
            "classification=$classification," +
            "type=$type" +
            ")"
    }

    override fun hashCode(): Int {
        var resultHashCode = 0
        resultHashCode = resultHashCode * 31 + this.name.optimisticHashCode()
        resultHashCode = resultHashCode * 31 + this.classification.optimisticHashCode()
        resultHashCode = resultHashCode * 31 + this.type.optimisticHashCode()
        return resultHashCode
    }

    override fun equals(other: Any?): Boolean {
        return if (this === other) {
            true
        } else {
            other is Animal &&
                this.name == other.name &&
                this.classification == other.classification &&
                this.type == other.type
        }
    }

    /**
     * Values: AMPHIBIAN, BIRD, FISH, INSECT, MAMMAL, REPTILE
     */
    @JsonClass(generateAdapter = false)
    enum class ClassificationEnum(val value: String) {
        @Json(name = "amphibian") AMPHIBIAN("amphibian"),
        @Json(name = "bird") BIRD("bird"),
        @Json(name = "fish") FISH("fish"),
        @Json(name = "insect") INSECT("insect"),
        @Json(name = "mammal") MAMMAL("mammal"),
        @Json(name = "reptile") REPTILE("reptile")
    }
}
