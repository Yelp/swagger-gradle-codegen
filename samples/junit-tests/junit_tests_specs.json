{
    "definitions": {
        "empty_model": {
            "type": "object",
            "x-model": "empty_model"
        },
        "format_responses": {
            "properties": {
                "date_property": {
                    "format": "date",
                    "type": "string"
                },
                "datetime_property": {
                    "format": "date-time",
                    "type": "string"
                },
                "enum_property": {
                    "enum": [
                        "VALUE1",
                        "VALUE2"
                    ],
                    "type": "string"
                }
            },
            "type": "object",
            "x-model": "format_responses"
        },
        "nested_additional_properties": {
            "additionalProperties": {
                "$ref": "#/definitions/top_level_map"
            },
            "type": "object",
            "x-model": "nested_additional_properties"
        },
        "nested_additional_properties_custom_description": {
            "allOf": [
                {
                    "$ref": "#/definitions/nested_additional_properties"
                },
                {
                    "description": "This is a workaroud to override the description provided by nested_additional_properties"
                }
            ],
            "type": "object",
            "x-model": "nested_additional_properties_custom_description"
        },
        "property_array": {
            "properties": {
                "number_array": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "string_array": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-model": "property_array"
        },
        "property_map": {
            "properties": {
                "number_map": {
                    "additionalProperties": {
                        "type": "number"
                    },
                    "type": "object",
                    "x-model": "number_map"
                },
                "object_map": {
                    "type": "object",
                    "x-model": "object_map"
                },
                "string_map": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "x-model": "string_map"
                }
            },
            "type": "object",
            "x-model": "property_map"
        },
        "required_type_responses": {
            "properties": {
                "boolean_property": {
                    "type": "boolean"
                },
                "enum_property": {
                    "enum": [
                        "VALUE1",
                        "VALUE2"
                    ],
                    "type": "string"
                },
                "integer_property": {
                    "type": "integer"
                },
                "number_property": {
                    "type": "number"
                },
                "string_property": {
                    "type": "string"
                }
            },
            "required": [
                "boolean_property",
                "enum_property",
                "integer_property",
                "number_property",
                "string_property"
            ],
            "type": "object",
            "x-model": "required_type_responses"
        },
        "reserved_keywords": {
            "properties": {
                "class": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "for": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "val": {
                    "type": "string"
                },
                "var": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-model": "reserved_keywords"
        },
        "top_level_enum": {
            "enum": [
                "TOP_LEVEL_VALUE1",
                "TOP_LEVEL_VALUE2"
            ],
            "type": "string",
            "x-model": "top_level_enum"
        },
        "top_level_map": {
            "additionalProperties": {
                "type": "string"
            },
            "type": "object",
            "x-model": "top_level_map"
        },
        "type_responses": {
            "properties": {
                "boolean_property": {
                    "type": "boolean"
                },
                "integer_property": {
                    "type": "integer"
                },
                "number_property": {
                    "type": "number"
                },
                "string_property": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-model": "type_responses"
        },
        "xnullable_format_request": {
            "properties": {
                "date_property": {
                    "format": "date",
                    "type": "string"
                },
                "datetime_property": {
                    "format": "date-time",
                    "type": "string"
                },
                "double_property": {
                    "format": "double",
                    "type": "number"
                },
                "xnullable_date_property": {
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "xnullable_datetime_property": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "xnullable_double_property": {
                    "format": "double",
                    "type": "number",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-model": "xnullable_format_request"
        },
        "xnullable_format_responses": {
            "properties": {
                "date_property": {
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "datetime_property": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "double_property": {
                    "format": "double",
                    "type": "number",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-model": "xnullable_format_responses"
        },
        "xnullable_map": {
            "additionalProperties": {
                "type": "string",
                "x-nullable": true
            },
            "type": "object",
            "x-model": "xnullable_map",
            "x-nullable": true
        },
        "xnullable_nested_additional_properties": {
            "additionalProperties": {
                "$ref": "#/definitions/xnullable_map"
            },
            "type": "object",
            "x-model": "xnullable_nested_additional_properties"
        },
        "xnullable_property_array": {
            "properties": {
                "number_array": {
                    "items": {
                        "type": "number",
                        "x-nullable": true
                    },
                    "type": "array",
                    "x-nullable": true
                },
                "string_array": {
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "type": "array",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-model": "xnullable_property_array"
        },
        "xnullable_property_map": {
            "properties": {
                "number_map": {
                    "additionalProperties": {
                        "type": "number",
                        "x-nullable": true
                    },
                    "type": "object",
                    "x-model": "number_map",
                    "x-nullable": true
                },
                "object_map": {
                    "type": "object",
                    "x-model": "object_map",
                    "x-nullable": true
                },
                "string_map": {
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "type": "object",
                    "x-model": "string_map",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-model": "xnullable_property_map"
        },
        "xnullable_required_property_array": {
            "properties": {
                "number_array": {
                    "items": {
                        "type": "number",
                        "x-nullable": true
                    },
                    "type": "array",
                    "x-nullable": true
                },
                "string_array": {
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "type": "array",
                    "x-nullable": true
                }
            },
            "required": [
                "number_array",
                "string_array"
            ],
            "type": "object",
            "x-model": "xnullable_required_property_array"
        },
        "xnullable_required_property_map": {
            "properties": {
                "number_map": {
                    "additionalProperties": {
                        "type": "number",
                        "x-nullable": true
                    },
                    "type": "object",
                    "x-model": "number_map",
                    "x-nullable": true
                },
                "object_map": {
                    "type": "object",
                    "x-model": "object_map",
                    "x-nullable": true
                },
                "string_map": {
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "type": "object",
                    "x-model": "string_map",
                    "x-nullable": true
                }
            },
            "required": [
                "number_map",
                "object_map",
                "string_map"
            ],
            "type": "object",
            "x-model": "xnullable_required_property_map"
        },
        "xnullable_required_type_responses": {
            "properties": {
                "boolean_property": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "enum_property": {
                    "enum": [
                        "VALUE1",
                        "VALUE2"
                    ],
                    "type": "string",
                    "x-nullable": true
                },
                "integer_property": {
                    "type": "integer",
                    "x-nullable": true
                },
                "number_property": {
                    "type": "number",
                    "x-nullable": true
                },
                "string_property": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "boolean_property",
                "enum_property",
                "integer_property",
                "number_property",
                "string_property"
            ],
            "type": "object",
            "x-model": "xnullable_required_type_responses"
        },
        "xnullable_type_responses": {
            "properties": {
                "boolean_property": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "enum_property": {
                    "enum": [
                        "VALUE1",
                        "VALUE2"
                    ],
                    "type": "string",
                    "x-nullable": true
                },
                "integer_property": {
                    "type": "integer",
                    "x-nullable": true
                },
                "number_property": {
                    "type": "number",
                    "x-nullable": true
                },
                "string_property": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-model": "xnullable_type_responses"
        }
    },
    "info": {
        "description": "This spec is used to have JUnit Tests to check the generated code.",
        "title": "JUnit Tests",
        "version": "1.1.0"
    },
    "paths": {
        "/empty_endpoint": {
            "get": {
                "operationId": "get_empty_endpoint",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/empty_model"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/format_endpoint/{property_format}": {
            "get": {
                "operationId": "get_format_endpoint",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property_format",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/format_responses"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/model_name/no_x-model_or_title": {
            "get": {
                "operationId": "getInlinedModelWithNoNames",
                "responses": {
                    "200": {
                        "description": "The expected model name is InlineResponse200 (generated by codegen)",
                        "schema": {
                            "properties": {
                                "no_xmodel_no_title": {
                                    "enum": [
                                        "val1",
                                        "val2"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "tags": [
                    "model_name_check"
                ]
            }
        },
        "/model_name/title_only": {
            "get": {
                "operationId": "getInlinedModelWithTitleOnly",
                "responses": {
                    "200": {
                        "description": "The expected model name is ModelWithOnlyTitle (title attribute)",
                        "schema": {
                            "properties": {
                                "title_only": {
                                    "enum": [
                                        "val1",
                                        "val2"
                                    ],
                                    "type": "string"
                                }
                            },
                            "title": "ModelWithOnlyTitle",
                            "type": "object"
                        }
                    }
                },
                "tags": [
                    "model_name_check"
                ]
            }
        },
        "/model_name/x-model_and_title": {
            "get": {
                "operationId": "getInlinedModelWithXModelAndTitle",
                "responses": {
                    "200": {
                        "description": "The expected model name is ModelWithXModelAndTitle (x-model attribute)",
                        "schema": {
                            "properties": {
                                "xmodel_and_title": {
                                    "enum": [
                                        "val1",
                                        "val2"
                                    ],
                                    "type": "string"
                                }
                            },
                            "title": "ThisShouldBeIgnored",
                            "type": "object",
                            "x-model": "ModelWithXModelAndTitle"
                        }
                    }
                },
                "tags": [
                    "model_name_check"
                ]
            }
        },
        "/model_name/x-model_only": {
            "get": {
                "operationId": "getInlinedModelWithXModelOnly",
                "responses": {
                    "200": {
                        "description": "The expected model name is ModelWithOnlyXModel (x-model attribute)",
                        "schema": {
                            "properties": {
                                "xmodel_only": {
                                    "enum": [
                                        "val1",
                                        "val2"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "x-model": "ModelWithOnlyXModel"
                        }
                    }
                },
                "tags": [
                    "model_name_check"
                ]
            }
        },
        "/nested_additional_properties": {
            "get": {
                "operationId": "get_nested_additional_properties",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/nested_additional_properties"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/nested_additional_properties/custom_description": {
            "get": {
                "operationId": "get_nested_additional_properties_custom_description",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/nested_additional_properties_custom_description"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/post/file": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "post_file",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "client_file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Something"
                    }
                },
                "tags": [
                    "file"
                ]
            }
        },
        "/post/file_without_consumes": {
            "post": {
                "operationId": "post_file_without_multipart_form_data",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "client_file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Something"
                    }
                },
                "tags": [
                    "file"
                ]
            }
        },
        "/post/multiple_files": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "post_multiple_files",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "client_file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "certificate_file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "Something"
                    }
                },
                "tags": [
                    "file"
                ]
            }
        },
        "/property_array/{value_type}/{size}": {
            "get": {
                "operationId": "get_property_array",
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/property_array"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/property_map/{value_type}/{size}": {
            "get": {
                "operationId": "get_property_map",
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/property_map"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/required/type_endpoint": {
            "get": {
                "operationId": "get_required_type_endpoint",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/required_type_responses"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/reserved_keywords": {
            "get": {
                "operationId": "get_reserved_keywords",
                "parameters": [
                    {
                        "in": "query",
                        "name": "class",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "data",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "for",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "operator",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "val",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "var",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "when",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/reserved_keywords"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/symbols/in/parameter/name": {
            "get": {
                "description": "Make sure that symbols in parameter name are treated properly",
                "operationId": "getSymbolsInParameterName",
                "parameters": [
                    {
                        "in": "query",
                        "name": "parameter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "brackets[]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "brackets[withText]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dot.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "dot.withText",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "summary": "Test symbols in parameter name",
                "tags": [
                    "resource"
                ]
            }
        },
        "/top_level_enum": {
            "get": {
                "operationId": "get_top_level_enum",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/top_level_enum"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/top_level_enum/nested": {
            "get": {
                "operationId": "get_top_level_enum_nested",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "additionalProperties": {
                                "additionalProperties": {
                                    "$ref": "#/definitions/top_level_enum"
                                },
                                "type": "object"
                            },
                            "type": "object"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/top_level_map/{size}": {
            "get": {
                "operationId": "get_top_level_map",
                "parameters": [
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/top_level_map"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/type_endpoint/{property_type}": {
            "get": {
                "operationId": "get_type_endpoint",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/type_responses"
                        }
                    }
                },
                "tags": [
                    "resource"
                ]
            }
        },
        "/xnullable/format_endpoint/{property_format}": {
            "get": {
                "operationId": "get_xnullable_format_endpoint",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property_format",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_format_responses"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            },
            "post": {
                "operationId": "post_xnullable_format_endpoint",
                "parameters": [
                    {
                        "in": "body",
                        "name": "property_format",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/xnullable_format_request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/nested_additional_properties": {
            "get": {
                "operationId": "get_xnullable_nested_additional_properties",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_nested_additional_properties"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/property_array/{value_type}/{size}": {
            "get": {
                "operationId": "get_xnullable_property_array",
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_property_array"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/property_map/{value_type}/{size}": {
            "get": {
                "operationId": "get_xnullable_property_map",
                "parameters": [
                    {
                        "in": "path",
                        "name": "value_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_property_map"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/required/property_array/{size}": {
            "get": {
                "operationId": "get_xnullable_required_property_array",
                "parameters": [
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_required_property_array"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/required/property_map/{size}": {
            "get": {
                "operationId": "get_xnullable_required_property_map",
                "parameters": [
                    {
                        "in": "path",
                        "name": "size",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_required_property_map"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/required/type_endpoint/{property_type}": {
            "get": {
                "operationId": "get_xnullable_required_type_endpoint",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_required_type_responses"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        },
        "/xnullable/type_endpoint/{property_type}": {
            "get": {
                "operationId": "get_xnullable_type_endpoint",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/xnullable_type_responses"
                        }
                    }
                },
                "tags": [
                    "xnullable"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "swagger": "2.0"
}
